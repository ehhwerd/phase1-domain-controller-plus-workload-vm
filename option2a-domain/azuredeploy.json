{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "envPrefixName": {
      "type": "string",
      "metadata": {
        "description": "Unique Prefix for the environment (2-15 characters)asd"
      },
      "minLength": 2,
      "maxLength": 15
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the Active Directory Domain to be created"
      }
    },
    "username": {
      "type": "string",
      "metadata": {
        "description": "Domain Admin Username"
      }
    },
    "password": {
      "type": "securestring",
      "metadata": {
        "description": "Domain Admin Password"
      }
    },
    "webSrvVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_D1_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS1_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "The size of the Web Server VMs Created"
      },
      "defaultValue": "Standard_DS2_v2"
    },
    "numberOfWebSrvs": {
      "type": "int",
      "metadata": {
        "description": "Number of Web Servers"
      },
      "allowedValues": [
        1,
        2
      ],
      "defaultValue": 1
    },
    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_D1_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_DS1_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2"
      ],
      "metadata": {
        "description": "The size of the SQL VM Created"
      },
      "defaultValue": "Standard_DS3_v2"
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },

    "advmsize": {
      "type": "string",
      "metadata": {
        "description": "The size of VM to use"
      },
      "defaultValue": "Standard_A2_v2",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_D1_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2"
      ]
    },
    "windowsserver": {
      "type": "string",
      "metadata": {
        "description": "The version of Windows Server to use"
      },
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ]
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "storageName": "[concat(parameters('envPrefixName'), uniqueString(parameters('envPrefixName')))]",
    "vhdContainer": "vhds",
    "virtualNetworkName": "[concat(parameters('envPrefixName'), 'VNET')]",
    "addressPrefix": "10.255.0.0/16",
    "feSubnetPrefix": "10.255.1.0/24",
    "dbSubnetPrefix": "10.255.0.0/24",
    "feNSGName": "feNsg",
    "dbNSGName": "dbNsg",
    "sqlSrvDBName": "[concat(parameters('envPrefixName'), 'sqlSrv14')]",
    "sqlVmSize": "[parameters('sqlVMSize')]",
    "sqlSrvDBOsDiskName": "[concat(parameters('envPrefixName'), 'DBSrvOS')]",
    "sqlSrvDBDataDiskName": "[concat(parameters('envPrefixName'), 'DBSrvData')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "sqlSrvDBNicName": "[concat(variables('sqlSrvDBName'), 'Nic')]",
    "sqlSvrDBSubnetRef": "[concat(variables('vnetId'), '/subnets/', 'DBSubnetName')]",
    "sqlPublicIP": "[concat(parameters('envPrefixName'), 'SqlPip')]",
    "sqlPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sqlPublicIP'))]",
    "sqlImagePublisher": "MicrosoftSQLServer",
    "sqlImageOffer": "SQL2016SP1-WS2016",
    "sqlImageSku": "Standard",
    "webSrvName": "[concat(parameters('envPrefixName'), 'webSrv')]",
    "webSrvVMSize": "[parameters('webSrvVMSize')]",
    "webSrvOSDiks": "[concat(parameters('envPrefixName'), 'WebSrvOS')]",
    "webSrvNicName": "[concat(variables('webSrvName'), 'Nic')]",
    "webSrvSubnetRef": "[concat(variables('vnetId'), '/subnets/', 'FESubnetName')]",
    "webSrvPublicIP": "[concat(parameters('envPrefixName'), 'websrvpip')]",
    "webSrvAvailabilitySetName": "[concat(parameters('envPrefixName'), 'webSrvAS')]",
    "webSrvNumbOfInstances": "[parameters('numberOfWebSrvs')]",
    "webSrvDnsNameforLBIP": "[concat(toLower(variables('webSrvName')), 'lb')]",
    "webLbName": "[concat(variables('webSrvName'), 'lb')]",
    "webLblbID": "[resourceId('Microsoft.Network/loadBalancers',variables('webLbName'))]",
    "webLblb_PIP_Id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('webSrvPublicIP'))]",
    "webLbId": "[resourceId('Microsoft.Network/loadBalancers',variables('webLbName'))]",
    "frontEndIPConfigID": "[concat(variables('webLbId'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbPoolID": "[concat(variables('webLbId'),'/backendAddressPools/BackendPool1')]",
    "lbProbeID": "[concat(variables('webLbId'),'/probes/tcpProbe')]",
    "vmExtensionName": "dscExtension",
    "modulesUrl": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/iis-2vm-sql-1vm/scripts/WebServerConfig.ps1.zip",
    "configurationFunction": "WebServerConfig.ps1\\WebServerConfig",

    "adAvailabilitySetName": "adAvailabilitySet",
    "adLBName": "adLoadBalancer",
    "adLBFE": "adLBFE",
    "adLBBE": "adLBBE",
    "adRDPNAT": "adRDP",
    "adNicName": "adNic",
    "adPublicIPAddressName": "adPublicIP",
    "adNicIPAddress": "10.255.0.4",
    "adVMName": "adVM",

    "_artifactsLocation": "https://raw.githubusercontent.com/ehhwerd/phase1-domain-controller-plus-workload-vm/master/option2a-domain",

    "CreateADForestDSCFolder": "DSC",
    "CreateADForestDSCFileName": "CreateADPDC.zip",

    "UpdateVNetTemplateFolder": "nestedtemplates",
    "UpdateVNetTemplateFileName": "vnet-with-dns-server.json"


  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('feNSGName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "FrontEndNSG"
      },
      "properties": {
        "securityRules": [
          {
            "name": "rdp_rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "web_rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('dbNSGName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "BackEndNSG"
      },
      "properties": {
        "securityRules": [
          {
            "name": "Allow_FE",
            "properties": {
              "description": "Allow FE Subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "10.255.1.0/24",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp_rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          //{
          //  "name": "Block_FE",
          //  "properties": {
          //    "description": "Block App Subnet",
          //    "protocol": "*",
          //    "sourcePortRange": "*",
          //    "destinationPortRange": "*",
          //    "sourceAddressPrefix": "10.0.0.0/16",
          //    "destinationAddressPrefix": "*",
          //    "access": "Deny",
          //    "priority": 121,
          //    "direction": "Inbound"
          //  }
          //},
          {
            "name": "Allow_Internet",
            "properties": {
              "description": "Allow Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 200,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('feNSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('dbNSGName'))]"
      ],
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "FESubnetName",
            "properties": {
              "addressPrefix": "[variables('feSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('feNSGName'))]"
              }
            }
          },
          {
            "name": "DBSubnetName",
            "properties": {
              "addressPrefix": "[variables('dbSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dbNSGName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('adPublicIPAddressName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ADPublicIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('ad',parameters('envPrefixName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('adAvailabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ADAvailabilitySet"
      },
      "properties": {
        "managed": "true",
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 2
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('adLBName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('adPublicIPAddressName'))]"
      ],
      "tags": {
        "displayName": "ADLoadBalancer"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('adLBFE')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('adPublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('adLBBE')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('adRDPNAT')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('adLBName'), variables('adLBFE'))]"
              },
              "protocol": "tcp",
              "frontendPort": 3389,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('adNicName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('adLBName'))]"
      ],
      "tags": {
        "displayName": "ADNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('adNicIPAddress')]",
              "subnet": {
                "id": "[variables('sqlSvrDBSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('adLBName'), variables('adLBBE'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('adLBName'), variables('adRDPNAT'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/disks",
      "name": "[concat(variables('adVMName'), '-data-disk')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ADVMDataDisk"
      },
      "properties": {
        "creationData": {
          "createOption": "empty"
        },
        "accountType": "Standard_LRS",
        "diskSizeGB": "1023"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('adVMName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', concat(variables('adVMName'), '-data-disk'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('adLBName'))]"
      ],
      "tags": {
        "displayName": "ADVM"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('advmsize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[variables('adVMName')]",
          "adminUsername": "[parameters('username')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsserver')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('adVMName'), '-osdisk')]",
            "createOption": "FromImage",
            "diskSizeGB": "128"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('adVMName'), '-data-disk')]",
              "caching": "ReadOnly",
              "lun": 0,
              "createOption": "Attach",
              "managedDisk": {
                "id": "[resourceId('Microsoft.Compute/disks', concat(variables('adVMName'), '-data-disk'))]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('adNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "CreateADForest",
          "apiVersion": "2016-03-30",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('adVMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.22",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "latest",
              "configuration": {
                "url": "[concat(variables('_artifactsLocation'), '/', variables('CreateADForestDSCFolder'), '/', variables('CreateADForestDSCFileName'))]",
                //"url": "https://raw.githubusercontent.com/ehhwerd/phase1-domain-controller-plus-workload-vm/master/option1/DSC/CreateADPDC.zip",
                "script": "CreateADPDC.ps1",
                "function": "CreateADPDC"
              },
              "configurationArguments": {
                "DomainName": "[parameters('domainName')]"
              },
              "privacy": {
                "datacollection": "enable"
              },
              "advancedOptions": {
                "forcePullAndApply": false
              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "AdminCreds": {
                  "UserName": "[parameters('username')]",
                  "Password": "[parameters('password')]"
                }
              }
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "UpdateVNetDNS",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        
        //"[resourceId('Microsoft.Compute/virtualMachines', variables('adVMName'))]"
        "Microsoft.Compute/virtualMachines/adVM/extensions/CreateADForest"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('_artifactsLocation'), '/', variables('UpdateVNetTemplateFolder'), '/', variables('UpdateVNetTemplateFileName'))]",
          // "uri": "https://raw.githubusercontent.com/ehhwerd/phase1-domain-controller-plus-workload-vm/master/option1/nestedtemplates/vnet-with-dns-server.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('addressPrefix')]"
          },
          "dbsubnetName": {
            "value": "DBSubnetName"
          },
          "dbsubnetRange": {
            "value": "[variables('dbSubnetPrefix')]"
          },
          "fesubnetName": {
            "value": "FESubnetName"
          },
          "fesubnetRange": {
            "value": "[variables('feSubnetPrefix')]"
          },
          "dbNSGName": {
            "value": "[variables('dbNSGName')]"
          },
          "feNSGName": {
            "value": "[variables('feNSGName')]"
          },
          "DNSServerAddress": {
            "value": [ "[variables('adNicIPAddress')]" ]

          }
        }
      }
    },
    {
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [],
      "tags": {
        "displayName": "StorageForEnv"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "[variables('sqlPublicIP')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "tags": {
        "displayName": "SqlPIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "name": "[variables('sqlSrvDBNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('adNicName'))]"
      ],
      "tags": {
        "displayName": "SQLSrvDBNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('sqlSvrDBSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[variables('sqlPublicIPRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(parameters('envPrefixName'), 'sqlSrv14')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('sqlSrvDBNicName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('sqlPublicIP'))]",
        "Microsoft.Resources/deployments/UpdateVNetDNS"
      ],
      "tags": {
        "displayName": "SQL-Svr-DB"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('sqlVmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('sqlSrvDBName')]",
          "adminUsername": "[parameters('username')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('sqlImagePublisher')]",
            "offer": "[variables('sqlImageOffer')]",
            "sku": "[variables('sqlImageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "SQL-Svr-DBOSDisk",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "128"
          }
        },

        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('sqlSrvDBNicName'))]"
            }
          ]
        }


      },
      "resources": [
        {
          "apiVersion": "2017-03-30",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('envPrefixName'),'sqlSrv14','/joindomain')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('sqlSrvDBName'))]"
          ],
          "tags": {
            "displayName": "SQL-Svr-DB/joindomain"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "Name": "[parameters('domainName')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[concat(parameters('domainName'), '\\', parameters('username'))]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "protectedSettings": {
              "Password": "[parameters('password')]"
            }
          }
        }
      ]
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webSrvAvailabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "WebSrvAvailabilitySet"
      },
      "properties": {
        "managed": true,
        "platformFaultDomainCount": "2"
      }
    },
    {
      "name": "[variables('webSrvPublicIP')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "tags": {
        "displayName": "WebSrvPIP for LB"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('webSrvDnsNameforLBIP')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "[variables('webLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Web LB"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('webSrvPublicIP'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('webLblb_PIP_Id')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "inboundNatRules": [
          {
            "name": "RDP-VM0",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50001,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "RDP-VM1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50002,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('webSrvNicName'), copyindex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('webSrvNumbOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('webLbName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('adNicName'))]"
      ],
      "tags": {
        "displayName": "WebSrvNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('webSrvSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('webLbId'), '/backendAddressPools/BackendPool1')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('webLbId'),'/inboundNatRules/RDP-VM', copyindex())]"
                }
              ]

            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('webSrvName'), copyindex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-30-preview",
      "copy": {
        "name": "webSrvMachineLoop",
        "count": "[variables('webSrvNumbOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('webSrvNicName'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('webSrvAvailabilitySetName'))]",
        "Microsoft.Resources/deployments/UpdateVNetDNS"
      ],
      "tags": {
        "displayName": "WebSrv"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('webSrvAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('webSrvVMSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('webSrvName'),copyindex())]",
          "adminUsername": "[parameters('username')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "WebSvrOSDisk",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "128"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('webSrvNicName'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('webSrvName'), copyindex(),'/', variables('vmExtensionName'))]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "webSrvMachineLoop",
        "count": "[variables('webSrvNumbOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('webSrvName'), copyindex())]"
      ],
      "tags": {
        "displayName": "VM Extensions"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('modulesUrl')]",
          "SasToken": "",
          "ConfigurationFunction": "[variables('configurationFunction')]",
          "wmfVersion": "4.0",
          "Properties": {
          }
        },
        "protectedSettings": {}
      }
    }
  ]
}
